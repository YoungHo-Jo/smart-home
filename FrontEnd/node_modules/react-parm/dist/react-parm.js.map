{"version":3,"file":"react-parm.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["// external dependencies\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\n\n/**\n * @const {Array<string>} BOUND_METHODS the methods to be bound to the instance\n */\nexport const BOUND_METHODS = ['forceUpdate', 'setState'];\n\n/**\n * @constant {Object} IGNORED_COMPONENT_KEYS keys to ignore when creating a component\n */\nexport const IGNORED_COMPONENT_KEYS = {\n  getInitialState: true,\n  getInitialValues: true,\n  isPure: true,\n  onConstruct: true,\n  state: true,\n};\n\n/**\n * @constant {Object} IGNORED_STATIC_KEYS keys to ignore when assigning statics to a component\n */\nexport const IGNORED_STATIC_KEYS = {\n  displayName: true,\n};\n\n/**\n * @function addPropTypeIsRequired\n *\n * @description\n * add the isRequired method to the propType\n *\n * @param {function} propType the propType checker\n * @returns {function} the propType with the isRequired function added\n */\nexport const addPropTypeIsRequired = (propType) =>\n  (propType.isRequired = (props, key, component) =>\n    props[key] == null // eslint-disable-line eqeqeq\n      ? new Error(`The prop \\`${key}\\` is marked as required in \\`${component}\\`, but its value is \\`${props[key]}\\`.`)\n      : propType(props, key, component)) && propType;\n\n/**\n * @function bindMethods\n *\n * @description\n * bind the methods to the component instance to ensure it can be used in a functional way\n *\n * @param {ReactComponent} instance the instance to bind the method to\n * @returns {void}\n */\nexport const bindMethods = (instance) =>\n  BOUND_METHODS.map(\n    (method) =>\n      Object.prototype.hasOwnProperty.call(instance[method], 'prototype')\n        ? (instance[method] = instance[method].bind(instance))\n        : instance[method]\n  );\n\n/**\n * @function isClassComponent\n *\n * @description\n * is the value passed a valid react component class instance\n *\n * @param {any} value the value to test\n * @returns {boolean} is the value a react component instance\n */\nexport const isClassComponent = (value) => !!value && value instanceof React.Component;\n\n/**\n * @function logInvalidInstanceError\n *\n * @description\n * notify the user that the instance passed is invalid\n *\n * @param {string} type the type of creator being called\n * @returns {void}\n */\nexport const logInvalidInstanceError = (type) =>\n  console.error(`The instance provided for use with the ${type} is not a valid React component instance.`); // eslint-disable-line no-console\n\n/**\n * @function createRefCreator\n *\n * @description\n * create a method that will assign a ref value to the instance passed\n *\n * @param {function} getter the function that gets the component value for the ref\n * @returns {function(ReactComponent, string): function((HTMLElement|Component)): void} the ref create\n */\nexport const createRefCreator = (getter) => (instance, ref) =>\n  isClassComponent(instance) ? (component) => (instance[ref] = getter(component)) : logInvalidInstanceError('ref');\n\n/**\n * @function getNamespacedRef\n *\n * @description\n * get the ref that is a combination of the raw component and the component's underlying HTML element\n *\n * @param {ReactComponent} component the component to assin\n * @returns {{component: ReactComponent, element: HTMLElement}} the namespaced ref\n */\nexport const getNamespacedRef = (component) => ({\n  component,\n  element: findDOMNode(component),\n});\n\n/**\n * @function identity\n *\n * @description\n * return the first parameter passed\n *\n * @param {any} value the value to pass through\n * @returns {any} the first parameter passed\n */\nexport const identity = (value) => value;\n","// external dependencies\nimport React from 'react';\nimport {findDOMNode} from 'react-dom';\n\n// utils\nimport {\n  IGNORED_COMPONENT_KEYS,\n  IGNORED_STATIC_KEYS,\n  addPropTypeIsRequired,\n  bindMethods,\n  createRefCreator,\n  getNamespacedRef,\n  identity,\n  isClassComponent,\n  logInvalidInstanceError\n} from './utils';\n\n/**\n * @function createCombinedRef\n *\n * @description\n * create a ref that assigns both the raw component and the underlying HTML element to the instance on a namespace\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {{component: ReactComponent, element: HTMLElement}} the combined ref\n */\nexport const createCombinedRef = createRefCreator(getNamespacedRef);\n\n/**\n * @function createComponentRef\n *\n * @description\n * create a ref that assigns the component itself to the instance\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {ReactComponent} the component ref\n */\nexport const createComponentRef = createRefCreator(identity);\n\n/**\n * @function createElementRef\n *\n * @description\n * create a ref that assigns the component's underlying HTML element to the instance\n *\n * @param {ReactComponent} instance the instance to assign to\n * @param {string} ref the instance value name\n * @returns {HTMLElement} the element ref\n */\nexport const createElementRef = createRefCreator(findDOMNode);\n\n/**\n * @function createMethod\n *\n * @description\n * create a method that is a pure version of the lifecycle / instance method passed to it\n *\n * @param {ReactComponent} instance the instance the method is assigned to\n * @param {function} method the instance method\n * @param {Array<any>} extraArgs additional args to pass to the method\n * @returns {function(...Array<any>): any} the method with the instance passed as value\n */\nexport const createMethod = (instance, method, ...extraArgs) =>\n  isClassComponent(instance)\n    ? bindMethods(instance) && ((...args) => method.call(instance, instance, args, extraArgs))\n    : logInvalidInstanceError('method');\n\n/**\n * @function createRender\n *\n * @description\n * create a method that is a pure version of the render method\n *\n * @param {ReactComponent} instance the instance the method is assigned to\n * @param {function} render the render method\n * @returns {function(): ReactElement} the method with the props and instance passed as values\n */\nexport const createRender = (instance, render) =>\n  isClassComponent(instance)\n    ? bindMethods(instance) && ((...args) => render.call(instance, instance.props, instance, args))\n    : logInvalidInstanceError('render');\n\n/**\n * @function createRenderProps\n *\n * @description\n * create a render props method, where the props passed and the instance it is rendered in are passed as props to it\n *\n * @param {ReactComponent} instance the instance the method is assigned to\n * @param {function} renderProps the render props method\n * @returns {function(Object): ReactElement} the method with the props and instance passed as values\n */\nexport const createRenderProps = (instance, renderProps) =>\n  isClassComponent(instance)\n    ? bindMethods(instance) && ((props, ...restOfArgs) => renderProps.call(instance, props, instance, restOfArgs))\n    : logInvalidInstanceError('render props');\n\n/**\n * @function createValue\n *\n * @description\n * create a value to assign to the instance based on props or the instance itself\n *\n * @param {ReactComponent} instance the instance the method is assigned to\n * @param {function} getValue the function to get the value with\n * @param {Array<any>} extraArgs additional args to pass to the method\n * @returns {function(...Array<any>): any} the method with the instance passed as value\n */\nexport const createValue = (instance, getValue, ...extraArgs) =>\n  isClassComponent(instance)\n    ? bindMethods(instance) && getValue.call(instance, instance, extraArgs)\n    : logInvalidInstanceError('value');\n\n/**\n * @function createComponent\n *\n * @description\n * create a component from the render method and any options passed\n *\n * @param {function|Object} render the function to render the component, or the options for future curried calls\n * @param {Object} [passedOptions] the options to render the component with\n * @param {function} [getInitialState] the method to get the initial state with\n * @param {boolean} [isPure] is PureComponent used\n * @param {function} [onConstruct] a method to call when constructing the component\n * @param {Object} [state] the initial state\n * @returns {function|ReactComponent} the component class, or a curried call to itself\n */\nexport const createComponent = (render, passedOptions) => {\n  if (typeof render !== 'function') {\n    const options = render || {};\n\n    return (render, moreOptions) =>\n      typeof render === 'function'\n        ? createComponent(render, {\n          ...options,\n          ...(moreOptions || {}),\n        })\n        : createComponent({\n          ...options,\n          ...(render || {}),\n        });\n  }\n\n  const options = passedOptions || {};\n  const {getInitialState, getInitialValues, isPure, onConstruct, state} = options;\n\n  const Constructor = isPure ? React.PureComponent : React.Component;\n\n  function ParmComponent(initialProps) {\n    Constructor.call(this, initialProps);\n\n    this.state = typeof getInitialState === 'function' ? createValue(this, getInitialState) : state || null;\n\n    for (let key in options) {\n      if (!IGNORED_COMPONENT_KEYS[key]) {\n        this[key] =\n          typeof options[key] === 'function'\n            ? options[key].isRender\n              ? createRender(this, options[key])\n              : options[key].isRenderProps\n                ? createRenderProps(this, options[key])\n                : createMethod(this, options[key])\n            : options[key];\n      }\n    }\n\n    const values = typeof getInitialValues === 'function' ? createValue(this, getInitialValues) : null;\n\n    if (values && typeof values === 'object') {\n      for (let key in values) {\n        this[key] = values[key];\n      }\n    }\n\n    this.render = createRender(this, render);\n\n    if (typeof onConstruct === 'function') {\n      onConstruct(this);\n    }\n\n    return this;\n  }\n\n  ParmComponent.prototype = Object.create(Constructor.prototype);\n\n  ParmComponent.displayName = render.displayName || render.name || 'ParmComponent';\n\n  Object.keys(render).forEach(\n    (staticKey) => !IGNORED_STATIC_KEYS[staticKey] && (ParmComponent[staticKey] = render[staticKey])\n  );\n\n  return ParmComponent;\n};\n\n/**\n * @function createPropType\n *\n * @description\n * create a custom prop type handler\n *\n * @param {function(Object): (Error|null)} handler the prop type handler\n * @returns {function} the custom prop type\n */\nexport const createPropType = (handler) =>\n  addPropTypeIsRequired((props, key, component, locationIgnored, fullKey) =>\n    handler({\n      component,\n      key,\n      name: fullKey ? fullKey.split(/(\\.|\\[)/)[0] : key,\n      path: fullKey || key,\n      props,\n      value: props[key],\n    })\n  );\n"],"names":["BOUND_METHODS","IGNORED_COMPONENT_KEYS","getInitialState","getInitialValues","isPure","onConstruct","state","IGNORED_STATIC_KEYS","displayName","addPropTypeIsRequired","propType","isRequired","props","key","component","Error","bindMethods","instance","map","method","Object","prototype","hasOwnProperty","call","bind","isClassComponent","value","React","Component","logInvalidInstanceError","type","console","error","createRefCreator","getter","ref","getNamespacedRef","element","findDOMNode","identity","createCombinedRef","createComponentRef","createElementRef","createMethod","extraArgs","args","createRender","render","createRenderProps","renderProps","restOfArgs","createValue","getValue","createComponent","passedOptions","options","moreOptions","Constructor","PureComponent","ParmComponent","initialProps","isRender","isRenderProps","values","create","name","keys","forEach","staticKey","createPropType","handler","locationIgnored","fullKey","split","path"],"mappings":"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"}